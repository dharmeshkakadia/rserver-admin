import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'http://repo.obiba.org/repo' }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'

mainClassName = "org.obiba.rserver.Application"

jar {
    baseName = rootProject.name
}

tasks.startScripts {
    doLast {
        def scriptFile = file "${outputDir}/${applicationName}"
        scriptFile.text = scriptFile.text.replace('-classpath "$CLASSPATH"', '-Drserver.home="$APP_HOME" -classpath "$CLASSPATH"')
        scriptFile = file "${outputDir}/${applicationName}.bat"
        scriptFile.text = scriptFile.text.replace('-classpath "%CLASSPATH%"', '-Drserver.home="%APP_HOME%" -classpath "%CLASSPATH%"')
    }
}

tasks.distZip {
    archiveName = "${baseName}-${version}.zip"
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

configurations {
    jdeb
}

dependencies {
    jdeb "org.vafer:jdeb:1.0.1"
    compile("org.springframework.boot:spring-boot-starter-web:1.0.0.RC1") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:1.0.0.RC1")
    compile("com.google.guava:guava:15.0")
    compile("net.rforge:Rserve:0.6-8.1")
    compile("net.rforge:REngine:0.6-8.1")
    testCompile("junit:junit:4.11")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmmss")
    return df.format(new Date())
}

task distDeb(dependsOn: ['distZip']) << {
    ant.taskdef(name: 'deb', classname: 'org.vafer.jdeb.ant.DebAntTask',
            classpath: configurations.jdeb.asPath)

    // get the distribution files from the zip
    ant.unzip(src: "build/distributions/${rootProject.name}-${version}.zip", dest: "build/work")

    // replace version token
    ant.copy(todir: "build/work/debian") {
        fileset(dir: "src/main/deb/debian")
        filterset(begintoken: "[[", endtoken: "]]"){
            filter(token: "version", value: "${version}")
        }
    }

    // build the debian package
    ant.deb(destfile: "build/distributions/${rootProject.name}-${version}-b${buildTime()}_all.deb",
            control: 'build/work/debian/',
            verbose: 'true') {

        tarfileset(dir: "build/work/${rootProject.name}-${version}/bin", prefix: "/usr/share/rserver/bin", excludes: "*.bat", filemode: "755", username: "root", group: "root")
        tarfileset(dir: "build/work/${rootProject.name}-${version}/lib", prefix: "/usr/share/rserver/lib", includes: "*.jar, sigar/*", username: "root", group: "root")
        tarfileset(dir: "build/work/${rootProject.name}-${version}/conf", prefix: "/etc/rserver", username: "root", group: "root")
        tarfileset(dir: "src/main/deb/init.d", includes: "rserver", prefix: "/etc/init.d", filemode: "755", username: "root", group: "root")
        tarfileset(dir: "src/main/deb/default", includes: "rserver", prefix: "/etc/default", username: "root", group: "root")
    }

}
